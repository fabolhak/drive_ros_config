<launch>
    <arg name="vehicle" default="cc2019_car"/>
    <arg name="ximea_camera" default="camera"/>
    <arg name="homography_topic" default="/$(arg ximea_camera)/camera_homography"/>
    <arg name="visual_odometry_topic" default="/visual_odom/odom" />
    <arg name="scan_topic" default="/scan"/>
    <arg name="laser_obstacles_topic" default="/laser_obstacles"/>
    <arg name="driving_line_topic" default="/driving_line"/>
    <arg name="environment_model_topic" default="/environment_model"/>
    <arg name="trajectory_meta_input_topic" default="/trajectory_meta_input"/>
    <arg name="uavcan_topic" default="/canros/msg/phoenix_msgs/NucDriveCommand"/>

    <arg name="use_vision_nodelet" default="false"/>
    <arg name="vision_nodelet" default=""/>

    <include file="$(find drive_ros_cc2019_car)/launch/sensor_drivers.launch">
        <arg name="camera_name" value="ximea_camera"/>
        <arg name="homography_topic" value="$(arg homography_topic)"/>
        <arg name="scan_topic" value="$(arg scan_topic)"/>
    </include>

    <include file="$(find drive_ros_cc2019_car)/launch/visual_processing.launch">
        <arg name="camera" value="$(arg ximea_camera)"/>
        <arg name="homography_topic" value="/$(arg ximea_camera)/camera_homography"/>
        <arg name="odometry_topic" value="$(arg visual_odometry_topic)"/>
        <arg name="driving_line_topic" value="$(arg driving_line_topic)"/>
        <arg name="use_nodelet" value="$(arg use_vision_nodelet)"/>
        <arg name="nodelet_manager" value="$(arg vision_nodelet)"/>
    </include>

    <include file="$(find drive_ros_laserscan_obstacle_generator)/launch/laserscan_obstacle_generator.launch">
        <arg name="scan_topic" default="$(arg scan_topic)"/>
        <arg name="obstacles_topic" default="$(arg laser_obstacles_topic)"/>
        <arg name="vehicle" default="$(arg vehicle)"/>
    </include>

    <include file="$(find drive_ros_environment_model)/launch/environment_model.launch">
        <arg name="driving_line_in" default="$(arg driving_line_topic)"/>
        <arg name="obstacles_in" default="$(arg laser_obstacles_topic)"/>
        <arg name="env_out" default="$(arg environment_model_topic)"/>
    </include>

    <include file="$(find drive_ros_uavcan)/launch/server.launch"/>

    <include file="$(find drive_ros_custom_behavior_trees)/launch/behaviorTree.launch">
      <!-- "random" variables (factors, etc) -->
      <!-- possible modes: "PARKING", "OBSTACLES"-->
      <arg name="mode"/>
      <arg name="clean_output"/>
      <arg name="output_show_computation_time"/>
      <arg name="tick_frequency"/>
      <arg name="object_following_break_factor"/>
      <arg name="break_distance_safety_factor"/>
      <!-- Speeds -->
      <arg name="general_max_speed"/>
      <arg name="general_max_speed_cautious"/>
      <arg name="max_bridge_speed"/>
      <arg name="parking_spot_search_speed"/>
      <arg name="max_lane_switch_speed"/>
      <arg name="intersection_turn_speed"/>
      <arg name="sharp_turn_speed"/>
      <arg name="very_sharp_turn_speed"/>
      <arg name="speed_zero_tolerance"/>
      <!-- Distances -->
      <arg name="min_sign_react_distance"/>
      <arg name="max_sign_react_distance"/>
      <arg name="overtake_distance"/> <!-- According to the regulations this value must be at least 0.3-->
      <arg name="barred_area_react_distance"/>
      <arg name="oncoming_traffic_clearance"/>
      <arg name="max_start_box_distance"/>
      <arg name="intersection_max_obj_distance"/>

      <!-- These are usually set by the BT and may be changed for testing purposes only!-->
      <arg name="dynamic_reconfigure_overwrite_runtime_vals"/>
      <arg name="start_value__overtaking_forbidden_zone"/>
      <arg name="start_value__express_way"/>
      <arg name="start_value__priority_road"/>
      <arg name="start_value__force_stop"/>
      <arg name="start_value__on_bridge"/>
      <arg name="start_value__speed_limit"/>
      <arg name="start_value__successful_parking_count"/>
      <arg name="start_value__give_way"/>
      <!-- Seperate the states with '|' if necessary !-->
      <arg name="initial_states" type="str"/>
    </include>

    <include file="$(find drive_ros_trajectory_generator)/launch/trajectory_line_creator.launch">
        <arg name="driving_line_topic" default="$(arg driving_line_topic)"/>
        <arg name="trajectory_meta_input_topic" default="$(arg laser_obstacles_topic)"/>
        <arg name="uavcan_topic" default="$(arg uavcan_topic)"/>
    </include>
</launch>
